myboot.name=Prod Env
#log level

logging.level.com.basic.myspringboot=debug

# mariadb db 설정

spring.datasource.url=jdbc:mariadb://127.0.0.1:3307/boanni_db
#spring.datasource.url=jdbc:mariadb://12.0.0.1:3306/boot_db
spring.datasource.username=boanni_db
spring.datasource.password=StrongPassw0rd!
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

# 여기 개발 환경에 맞게 알아서 수정하세요
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect


# GROQ API 설정
#spring.ai.groq.api-key=${GROQ_API_KEY}
#spring.ai.groq.base-url=https://api.groq.com/openai/v1
#spring.ai.groq.chat.model=llama3-70b-8192
#spring.ai.groq.chat.temperature=0.7

# OpenAI (ChatGPT) API 설정
#spring.ai.openai.api-key=${GPT_API_KEY}
#spring.ai.openai.base-url=https://api.openai.com
#spring.ai.openai.chat.options.model=gpt-4o
# model 설정, 둘 중에 하나만 사용하기
# 가장 저렴한 모델 사용 : gpt-3.5-turbo
# gpt-4보다 싸고 빠름 : gpt-4o

spring.ai.openai.api-key=${GPT_API_KEY}
spring.ai.groq.api-key=${GROQ_API_KEY}


# thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
#html에서 patch 매핑 동작하기 위한 설정
spring.mvc.hiddenmethod.filter.enabled=true